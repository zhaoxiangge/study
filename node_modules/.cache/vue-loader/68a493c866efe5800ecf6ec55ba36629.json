{"remainingRequest":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!K:\\VUE\\vueStudy\\src\\components\\parentChild\\parent.vue?vue&type=template&id=15715b24&scoped=true","dependencies":[{"path":"K:\\VUE\\vueStudy\\src\\components\\parentChild\\parent.vue","mtime":1561991118000},{"path":"K:\\VUE\\vueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859504000},{"path":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1526010764000},{"path":"K:\\VUE\\vueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859504000},{"path":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n    <div class=\"bg1\" style=\"padding: 10px;\">\n        <p>parent</p>\n        <p>父组件的输入框的值:\n            <span>{{input1}}</span>\n        </p>\n        <p>子组件传来的值是:\n            <span>{{childValue}}</span>\n        </p>\n        <input type=\"text\" name=\"\" id=\"\" v-model=\"input1\" placeholder=\"v-model=input1 \">\n        <!-- data-3d-date-picker=\"true\" data-attr-ycselect=\"cityname,110010\"所谓非 prop 特性，就是指它可以直接传入组件，而不需要定义相应的 prop。\n\n尽管为组件定义明确的 prop 是推荐的传参方式，组件的作者却并不总能预见到组件被使用的场景。所以，组件可以接收任意传入的特性，这些特性都会被添加到组件的根元素上 -->\n        <p>\n            .sync,用于对prop 进行“双向绑定”,使用方式 在组件标签上 :txt1.sync=\"input1\" ,1.在绑定的prop名字后加修饰符.sync,2.在子组件内用 this.$emit('update:txt1', newValue)\n        </p>\n        <child-a v-on:click=\"doTheThing2\" v-on:click.native=\"doTheThing1\" data-3d-date-picker=\"true\" data-attr-ycselect=\"cityname,110010\"\n            :txt1.sync=\"input1\" txt2=\"ddddd\" @getChildValue=\"handleChildValue\"></child-a>\n\n    </div>\n\n",null]}