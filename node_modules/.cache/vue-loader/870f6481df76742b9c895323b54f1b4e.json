{"remainingRequest":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!K:\\VUE\\vueStudy\\src\\components\\customInput.vue?vue&type=style&index=0&id=1a7c82ce&scoped=true&lang=css","dependencies":[{"path":"K:\\VUE\\vueStudy\\src\\components\\customInput.vue","mtime":1561991118000},{"path":"K:\\VUE\\vueStudy\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907990000},{"path":"K:\\VUE\\vueStudy\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"K:\\VUE\\vueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859504000},{"path":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n}\n\ninputp[type=\"number\"] {\n    -moz-appearance: textfield;\n}\n",{"version":3,"sources":["customInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"customInput.vue","sourceRoot":"src\\components","sourcesContent":["<template>\n    <input ref=\"input\" v-bind:value=\"value\" @input=\"updateValue($event.target.value)\">\n    <!-- v-on:input=\"updateValue($event.target.value)\" -->\n</template>\n<script>\n    let EventUtil = null;\n    let inputControl = null;\n    export default {\n        name: 'customInput',\n        props: ['value'],\n        data() {\n            return {\n                todos: \"\",\n            }\n        },\n        created: function () {\n            EventUtil = this.CommonFun.EventUtil;\n            inputControl = this.CommonFun.inputControl;\n        },\n        mounted: function () {\n            let input = this.$refs.input;\n            if (this.$refs.input.getAttribute('data-control') != undefined) {\n                let controlList = this.$refs.input.getAttribute('data-control').split(',');\n                controlList.map(item => this[item](this.$refs.input))\n            }\n\n        },\n        methods: {\n            phone: function (ele) {\n                //最大长度\n                ele.setAttribute('maxLength', '11');\n                //只能输入数字\n                // inputControl.onlyNumber(ele);\n            },\n            idCard: function (ele) {\n                //最大长度\n                ele.setAttribute('maxLength', '18');\n\n                //只能输入数字\n                inputControl.onlyNumber(ele);\n            },\n            magnify: function (ele) {\n                EventUtil.addHandler(ele, 'focus', function (event) {\n                    ele.style.transform = \"scale(1.5)\";\n                })\n                EventUtil.addHandler(ele, 'blur', function (event) {\n                    ele.style.transform = \"\";\n                })\n            },\n            entertwice: function (ele) {\n                let that = this;\n                let firstvalue = \"\";\n                let lastValue = null; //记录上次双敲复核完成后的值\n                EventUtil.addHandler(ele, 'blur', function (event) {\n                    if (this.value != '' || firstvalue != '') {\n                        console.log('entertwice 离焦 输入的值不为空');\n                        that.$message1({\n                            content: 'entertwice 离焦 输入的值不为空',\n                            time: 5000,\n                            type: 'info',\n                            hasClose: true,\n                        });\n                        //离焦时,如果上次双敲复核完成后的值不等于这次的值,才能双敲复核,否则默认不再进行双敲复核\n                        if (lastValue != this.value) {\n                            lastValue = null; //每当开启双敲复核,就把上次双敲复核的值重置为null\n                            if (firstvalue == this.value && firstvalue != '') {\n                                //找下个焦点\n                                firstvalue = \"\";\n                                lastValue = this.value;\n                                // $target.trigger('twiceDone');//触发双敲复核的完成事件\n\n                            } else {\n                                if (firstvalue == '') {\n                                    firstvalue = this.value;\n                                    that.$message1({\n                                        content: '请再输入一次',\n                                        time: 5000,\n                                        type: 'info',\n                                        hasClose: true,\n                                    });\n                                    // BJUI.alertmsg(\"info\", \"请再输入一次\", {\n                                    //     displayPosition: 'middlecenter',\n                                    //     okCall: function () {\n\n                                    //         $target.val(\"\");\n                                    //         $target.focus();\n                                    //     }\n                                    // });\n                                } else {\n                                    that.$message1({\n                                        content: '两次输入不一致,请重新输入!',\n                                        time: 5000,\n                                        type: 'warn',\n                                        hasClose: true,\n                                    });\n                                    // BJUI.alertmsg(\"info\", \"两次输入不一致,请重新输入!\", {\n                                    //     displayPosition: 'middlecenter',\n                                    //     okCall: function () {\n                                    //         $target.val(\"\");\n                                    //         $target.focus();\n                                    //     }\n                                    // });\n                                    firstvalue = this.value;\n                                }\n\n                            }\n                        }\n                    }\n                })\n                // $target.on(\"resetentertwice\", function () {\n                //     firstvalue=\"\";\n                //     lastValue=null;\n                // })\n\n                //var firstvalue = \"\";\n                // var lastValue = null;\n                // $target.on(\"if.blur\", function () {\n                //     if($target.val()!=''||firstvalue!=''){\n                //         if (lastValue != $target.val()) {\n                //             lastValue = null;\n                //             if (firstvalue == $(this).val() && firstvalue != '') {\n                //                 //找下个焦点\n                //                 firstvalue = \"\";\n                //                 lastValue = $target.val();\n                //                 $target.trigger('twiceDone');\n                //                 var tabindex = $target.attr('tabindex');\n                //                 var index = tabindex.replace('IF', '');\n                //                 index = index * 1 + 1;\n                //                 $('[tabindex=IF' + index + ']:visible').focus();\n\n                //             } else {\n                //                 if (firstvalue == '') {\n                //                     firstvalue = $target.val();\n                //                     BJUI.alertmsg(\"info\", \"请再输入一次\", {\n                //                         displayPosition: 'middlecenter',\n                //                         okCall: function () {\n\n                //                             $target.val(\"\");\n                //                             $target.focus();\n                //                         }\n                //                     });\n                //                 } else {\n                //                     BJUI.alertmsg(\"info\", \"两次输入不一致,请重新输入!\", {\n                //                         displayPosition: 'middlecenter',\n                //                         okCall: function () {\n                //                             $target.val(\"\");\n                //                             $target.focus();\n                //                         }\n                //                     });\n                //                     firstvalue = $target.val();\n                //                 }\n\n                //             }\n                //         }\n                //     }else{\n                //         // $target.focus();\n                //         // $target.trigger(\"showmsg\", [\"error\", \"请输入值\"]);\n                //     }\n\n                // });\n\n\n            },\n            updateValue: function (value) {\n                this.$emit('input', value)\n            }\n        }\n    }\n</script>\n<style scoped>\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n    }\n\n    inputp[type=\"number\"] {\n        -moz-appearance: textfield;\n    }\n</style>"]}]}