{"remainingRequest":"J:\\myVue\\xz_admin_v2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!J:\\myVue\\xz_admin_v2\\src\\components\\customInput.vue?vue&type=style&index=0&id=1a7c82ce&scoped=true&lang=css","dependencies":[{"path":"J:\\myVue\\xz_admin_v2\\src\\components\\customInput.vue","mtime":1557382848000},{"path":"J:\\myVue\\xz_admin_v2\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"J:\\myVue\\xz_admin_v2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907990000},{"path":"J:\\myVue\\xz_admin_v2\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"J:\\myVue\\xz_admin_v2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859504000},{"path":"J:\\myVue\\xz_admin_v2\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n}\n\ninputp[type=\"number\"] {\n    -moz-appearance: textfield;\n}\n",{"version":3,"sources":["customInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"customInput.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <input ref=\"input\" v-bind:value=\"value\" @input=\"updateValue($event.target.value)\">\r\n    <!-- v-on:input=\"updateValue($event.target.value)\" -->\r\n</template>\r\n<script>\r\n    let EventUtil = null;\r\n    let inputControl = null;\r\n    export default {\r\n        name: 'customInput',\r\n        props: ['value'],\r\n        data() {\r\n            return {\r\n                todos: \"\",\r\n            }\r\n        },\r\n        created: function () {\r\n            EventUtil = this.CommonFun.EventUtil;\r\n            inputControl = this.CommonFun.inputControl;\r\n        },\r\n        mounted: function () {\r\n            let input = this.$refs.input;\r\n            if (this.$refs.input.getAttribute('data-control') != undefined) {\r\n                let controlList = this.$refs.input.getAttribute('data-control').split(',');\r\n                controlList.map(item => this[item](this.$refs.input))\r\n            }\r\n\r\n        },\r\n        methods: {\r\n            phone: function (ele) {\r\n                //最大长度\r\n                ele.setAttribute('maxLength', '11');\r\n                //只能输入数字\r\n                // inputControl.onlyNumber(ele);\r\n            },\r\n            idCard: function (ele) {\r\n                //最大长度\r\n                ele.setAttribute('maxLength', '18');\r\n\r\n                //只能输入数字\r\n                inputControl.onlyNumber(ele);\r\n            },\r\n            magnify: function (ele) {\r\n                EventUtil.addHandler(ele, 'focus', function (event) {\r\n                    ele.style.transform = \"scale(1.5)\";\r\n                })\r\n                EventUtil.addHandler(ele, 'blur', function (event) {\r\n                    ele.style.transform = \"\";\r\n                })\r\n            },\r\n            entertwice: function (ele) {\r\n                let that = this;\r\n                let firstvalue = \"\";\r\n                let lastValue = null; //记录上次双敲复核完成后的值\r\n                EventUtil.addHandler(ele, 'blur', function (event) {\r\n                    if (this.value != '' || firstvalue != '') {\r\n                        console.log('entertwice 离焦 输入的值不为空');\r\n                        that.$message1({\r\n                            content: 'entertwice 离焦 输入的值不为空',\r\n                            time: 5000,\r\n                            type: 'info',\r\n                            hasClose: true,\r\n                        });\r\n                        //离焦时,如果上次双敲复核完成后的值不等于这次的值,才能双敲复核,否则默认不再进行双敲复核\r\n                        if (lastValue != this.value) {\r\n                            lastValue = null; //每当开启双敲复核,就把上次双敲复核的值重置为null\r\n                            if (firstvalue == this.value && firstvalue != '') {\r\n                                //找下个焦点\r\n                                firstvalue = \"\";\r\n                                lastValue = this.value;\r\n                                // $target.trigger('twiceDone');//触发双敲复核的完成事件\r\n\r\n                            } else {\r\n                                if (firstvalue == '') {\r\n                                    firstvalue = this.value;\r\n                                    that.$message1({\r\n                                        content: '请再输入一次',\r\n                                        time: 5000,\r\n                                        type: 'info',\r\n                                        hasClose: true,\r\n                                    });\r\n                                    // BJUI.alertmsg(\"info\", \"请再输入一次\", {\r\n                                    //     displayPosition: 'middlecenter',\r\n                                    //     okCall: function () {\r\n\r\n                                    //         $target.val(\"\");\r\n                                    //         $target.focus();\r\n                                    //     }\r\n                                    // });\r\n                                } else {\r\n                                    that.$message1({\r\n                                        content: '两次输入不一致,请重新输入!',\r\n                                        time: 5000,\r\n                                        type: 'warn',\r\n                                        hasClose: true,\r\n                                    });\r\n                                    // BJUI.alertmsg(\"info\", \"两次输入不一致,请重新输入!\", {\r\n                                    //     displayPosition: 'middlecenter',\r\n                                    //     okCall: function () {\r\n                                    //         $target.val(\"\");\r\n                                    //         $target.focus();\r\n                                    //     }\r\n                                    // });\r\n                                    firstvalue = this.value;\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                // $target.on(\"resetentertwice\", function () {\r\n                //     firstvalue=\"\";\r\n                //     lastValue=null;\r\n                // })\r\n\r\n                //var firstvalue = \"\";\r\n                // var lastValue = null;\r\n                // $target.on(\"if.blur\", function () {\r\n                //     if($target.val()!=''||firstvalue!=''){\r\n                //         if (lastValue != $target.val()) {\r\n                //             lastValue = null;\r\n                //             if (firstvalue == $(this).val() && firstvalue != '') {\r\n                //                 //找下个焦点\r\n                //                 firstvalue = \"\";\r\n                //                 lastValue = $target.val();\r\n                //                 $target.trigger('twiceDone');\r\n                //                 var tabindex = $target.attr('tabindex');\r\n                //                 var index = tabindex.replace('IF', '');\r\n                //                 index = index * 1 + 1;\r\n                //                 $('[tabindex=IF' + index + ']:visible').focus();\r\n\r\n                //             } else {\r\n                //                 if (firstvalue == '') {\r\n                //                     firstvalue = $target.val();\r\n                //                     BJUI.alertmsg(\"info\", \"请再输入一次\", {\r\n                //                         displayPosition: 'middlecenter',\r\n                //                         okCall: function () {\r\n\r\n                //                             $target.val(\"\");\r\n                //                             $target.focus();\r\n                //                         }\r\n                //                     });\r\n                //                 } else {\r\n                //                     BJUI.alertmsg(\"info\", \"两次输入不一致,请重新输入!\", {\r\n                //                         displayPosition: 'middlecenter',\r\n                //                         okCall: function () {\r\n                //                             $target.val(\"\");\r\n                //                             $target.focus();\r\n                //                         }\r\n                //                     });\r\n                //                     firstvalue = $target.val();\r\n                //                 }\r\n\r\n                //             }\r\n                //         }\r\n                //     }else{\r\n                //         // $target.focus();\r\n                //         // $target.trigger(\"showmsg\", [\"error\", \"请输入值\"]);\r\n                //     }\r\n\r\n                // });\r\n\r\n\r\n            },\r\n            updateValue: function (value) {\r\n                this.$emit('input', value)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n    }\r\n\r\n    inputp[type=\"number\"] {\r\n        -moz-appearance: textfield;\r\n    }\r\n</style>"]}]}