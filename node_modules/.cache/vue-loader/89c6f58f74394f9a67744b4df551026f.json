{"remainingRequest":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!K:\\VUE\\vueStudy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!K:\\VUE\\vueStudy\\src\\views\\Form.vue?vue&type=template&id=d14622d0","dependencies":[{"path":"K:\\VUE\\vueStudy\\src\\views\\Form.vue","mtime":1563952802000},{"path":"K:\\VUE\\vueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859504000},{"path":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1526010764000},{"path":"K:\\VUE\\vueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859504000},{"path":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"page\" }, [\n    _c(\"fieldset\", { staticClass: \"fieldset\" }, [\n      _c(\"legend\", [_vm._v(\" 输入框修饰符\")]),\n      _c(\"div\", { staticClass: \"fieldContent\" }, [\n        _c(\"div\", [\n          _vm._v(\n            \"\\n                输入框的值:\" +\n              _vm._s(_vm.input1) +\n              \"\\n            \"\n          )\n        ]),\n        _c(\"div\", [\n          _vm._v('\\n                v-model.lazy=\"input1\"\\n                '),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model.lazy\",\n                value: _vm.input1,\n                expression: \"input1\",\n                modifiers: { lazy: true }\n              }\n            ],\n            attrs: { type: \"text\", name: \"\", id: \"\" },\n            domProps: { value: _vm.input1 },\n            on: {\n              change: function($event) {\n                _vm.input1 = $event.target.value\n              }\n            }\n          })\n        ])\n      ])\n    ]),\n    _c(\"fieldset\", { staticClass: \"fieldset\" }, [\n      _c(\"legend\", [_vm._v(\" 动态加载复选框, 复选框的全选与反选\")]),\n      _c(\"div\", { staticClass: \"fieldContent\" }, [\n        _c(\n          \"div\",\n          { staticStyle: { height: \"20px\" } },\n          [\n            _vm._v(\"\\n                选中的值:\\n                \"),\n            _vm._l(_vm.checkedList, function(item) {\n              return _c(\"span\", [_vm._v(_vm._s(item.value))])\n            })\n          ],\n          2\n        ),\n        _c(\n          \"div\",\n          [\n            _vm._l(_vm.checkList, function(item) {\n              return [\n                _c(\"input\", {\n                  key: item.value,\n                  attrs: { type: \"checkbox\", name: \"test\" },\n                  domProps: { value: item.value, checked: item.checked },\n                  on: {\n                    click: function($event) {\n                      _vm.checkBoxClick(item)\n                    }\n                  }\n                }),\n                _vm._v(_vm._s(item.text) + \"\\n                \")\n              ]\n            })\n          ],\n          2\n        ),\n        _c(\"div\", [\n          _c(\n            \"button\",\n            { attrs: { type: \"button\" }, on: { click: _vm.checkAllOrNone } },\n            [_vm._v(\"全选/全不选\")]\n          ),\n          _c(\n            \"button\",\n            { attrs: { type: \"button\" }, on: { click: _vm.checkReverse } },\n            [_vm._v(\"反选\")]\n          )\n        ])\n      ])\n    ]),\n    _c(\"fieldset\", { staticClass: \"fieldset\" }, [\n      _c(\"legend\", [_vm._v(\" 单选框的简单使用\")]),\n      _c(\"div\", { staticClass: \"fieldContent\" }, [\n        _c(\"div\", { staticStyle: { height: \"20px\" } }, [\n          _vm._v(\"\\n                选中的值:\\n                \"),\n          _c(\"span\", [\n            _vm._v(\n              _vm._s(\n                _vm.radioChecked == undefined ? \"\" : _vm.radioChecked.value\n              )\n            )\n          ])\n        ]),\n        _c(\n          \"div\",\n          [\n            _vm._l(_vm.radioList, function(item) {\n              return [\n                _c(\"input\", {\n                  key: item.value,\n                  attrs: {\n                    type: \"radio\",\n                    name: \"type\",\n                    id: \"radioTest\" + item.value\n                  },\n                  domProps: { value: item.value, checked: item.checked },\n                  on: {\n                    click: function($event) {\n                      _vm.radioClick(_vm.radioList, item)\n                    }\n                  }\n                }),\n                _c(\"label\", { attrs: { for: \"radioTest\" + item.value } }, [\n                  _vm._v(_vm._s(item.text))\n                ])\n              ]\n            }),\n            _c(\"button\", { on: { click: _vm.radioNone } }, [\n              _vm._v(\"不选单选框\")\n            ])\n          ],\n          2\n        )\n      ])\n    ]),\n    _c(\"fieldset\", { staticClass: \"fieldset\" }, [\n      _c(\"legend\", [_vm._v(\" 选择框\")]),\n      _c(\"div\", { staticClass: \"fieldContent\" }, [\n        _c(\"h4\", [_vm._v(\"单选框\")]),\n        _c(\"div\", { staticStyle: { height: \"20px\" } }, [\n          _vm._v(\"\\n                选中的值:\\n                \"),\n          _c(\"span\", [_vm._v(_vm._s(_vm.singleSelected))])\n        ]),\n        _c(\"div\", [\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.singleSelected,\n                  expression: \"singleSelected\"\n                }\n              ],\n              attrs: { name: \"singleSelected\", id: \"\" },\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.singleSelected = $event.target.multiple\n                    ? $$selectedVal\n                    : $$selectedVal[0]\n                }\n              }\n            },\n            [\n              _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                _vm._v(\"请选择\")\n              ]),\n              _vm._l(_vm.options, function(item) {\n                return _c(\"option\", { domProps: { value: item.value } }, [\n                  _vm._v(_vm._s(item.text))\n                ])\n              })\n            ],\n            2\n          )\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"fieldContent\" }, [\n        _c(\"h4\", [_vm._v(\"多选框\")]),\n        _c(\"div\", { staticStyle: { height: \"20px\" } }, [\n          _vm._v(\"\\n                选中的值:\\n                \"),\n          _c(\"span\", [_vm._v(_vm._s(_vm.manySelected))])\n        ]),\n        _c(\"div\", [\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.manySelected,\n                  expression: \"manySelected\"\n                }\n              ],\n              attrs: { name: \"manySelected\", multiple: \"\", id: \"\" },\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.manySelected = $event.target.multiple\n                    ? $$selectedVal\n                    : $$selectedVal[0]\n                }\n              }\n            },\n            [\n              _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                _vm._v(\"请选择\")\n              ]),\n              _vm._l(_vm.options, function(item) {\n                return _c(\"option\", { domProps: { value: item.value } }, [\n                  _vm._v(_vm._s(item.text))\n                ])\n              })\n            ],\n            2\n          )\n        ])\n      ])\n    ]),\n    _vm._m(0),\n    _c(\"fieldset\", { staticClass: \"fieldset\" }, [\n      _c(\"legend\", [_vm._v(\" 货币输入的自定义控件:currency-input\")]),\n      _c(\n        \"div\",\n        { staticClass: \"fieldContent\" },\n        [\n          _c(\"p\", [_vm._v(_vm._s(_vm.price))]),\n          _c(\"currency-input\", {\n            model: {\n              value: _vm.price,\n              callback: function($$v) {\n                _vm.price = $$v\n              },\n              expression: \"price\"\n            }\n          })\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"fieldset\", { staticClass: \"fieldset\" }, [\n      _c(\"legend\", [_vm._v(\" 自定义单选框:my-checkbox\")]),\n      _c(\"div\", { staticClass: \"fieldContent\" }, [_c(\"h4\", [_vm._v(\"单选框\")])])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}