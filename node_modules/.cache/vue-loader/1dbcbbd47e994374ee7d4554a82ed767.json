{"remainingRequest":"J:\\xz_admin_v2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!J:\\xz_admin_v2\\src\\views\\About.vue?vue&type=style&index=0&lang=css","dependencies":[{"path":"J:\\xz_admin_v2\\src\\views\\About.vue","mtime":1557279675359},{"path":"J:\\xz_admin_v2\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"J:\\xz_admin_v2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907989000},{"path":"J:\\xz_admin_v2\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"J:\\xz_admin_v2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859503174},{"path":"J:\\xz_admin_v2\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#about{\n  height: 1000px;\n  width: 100%;\n}\n",{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA","file":"About.vue","sourceRoot":"src\\views","sourcesContent":["<template>\n  <div class=\"about page\">\n    <textarea name=\"\" id=\"about\" cols=\"90\" rows=\"100\">\n        在编写组件时，最好考虑好以后是否要进行复用。一次性组件间有紧密的耦合没关系，但是可复用组件应当定义一个清晰的公开接口，同时也不要对其使用的外层数据作出任何假设。\n\n        Vue 组件的 API 来自三部分——prop、事件和插槽：\n        \n        Prop 允许外部环境传递数据给组件；\n        \n        事件允许从组件内触发外部环境的副作用；\n        \n        插槽允许外部环境将额外的内容组合在组件中。\n\n\n\n        子组件引用\n        尽管有 prop 和事件，但是有时仍然需要在 JavaScript 中直接访问子组件。为此可以使用 ref 为子组件指定一个引用 ID。例如：\n\n        <div id=\"parent\">\n          <user-profile ref=\"profile\"></user-profile>\n        </div>\n        var parent = new Vue({ el: '#parent' })\n        // 访问子组件实例\n        var child = parent.$refs.profile\n        当 ref 和 v-for 一起使用时，获取到的引用会是一个数组，包含和循环数据源对应的子组件。\n\n        $refs 只在组件渲染完成后才填充，并且它是非响应式的。它仅仅是一个直接操作子组件的应急方案——应当避免在模板或计算属性中使用 $refs。\n\n\n\n        对低开销的静态组件使用 v-once\n        尽管在 Vue 中渲染 HTML 很快，不过当组件中包含大量静态内容时，可以考虑使用 v-once 将渲染结果缓存起来，就像这样：\n\n        Vue.component('terms-of-service', {\n          template: '\\\n            <div v-once>\\\n              <h1>Terms of Service</h1>\\\n              ...很多静态内容...\\\n            </div>\\\n          '\n        })\n    </textarea>\n  </div>\n</template>\n<style>\n#about{\n  height: 1000px;\n  width: 100%;\n}\n</style>\n"]}]}