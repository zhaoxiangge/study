{"remainingRequest":"J:\\xz_admin_v2\\node_modules\\babel-loader\\lib\\index.js!J:\\xz_admin_v2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!J:\\xz_admin_v2\\src\\components\\parentChild\\child.vue?vue&type=script&lang=js","dependencies":[{"path":"J:\\xz_admin_v2\\src\\components\\parentChild\\child.vue","mtime":1557382879555},{"path":"J:\\xz_admin_v2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859503174},{"path":"J:\\xz_admin_v2\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"J:\\xz_admin_v2\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'child',\n  props: ['txt1', 'txt2'],\n  data: function data() {\n    return {\n      text1: '',\n      text2: '',\n      input1: '',\n      input2: ''\n    };\n  },\n  created: function created() {\n    this.text1 = this.txt1;\n    this.text2 = this.txt2;\n  },\n  methods: {\n    btnClick: function btnClick() {\n      this.$emit('getChildValue', {\n        msg: this.input1\n      });\n    },\n    input2Input: function input2Input() {\n      this.$emit('update:txt1', this.input2);\n    }\n  }\n};",{"version":3,"sources":["child.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgBA,eAAA;AACA,QAAA,OADA;AAEA,SAAA,CAAA,MAAA,EAAA,MAAA,CAFA;AAGA,MAHA,kBAGA;AACA,WAAA;AACA,aAAA,EADA;AAEA,aAAA,EAFA;AAGA,cAAA,EAHA;AAIA,cAAA;AAJA,KAAA;AAMA,GAVA;AAWA,WAAA,mBAAA;AACA,SAAA,KAAA,GAAA,KAAA,IAAA;AACA,SAAA,KAAA,GAAA,KAAA,IAAA;AACA,GAdA;AAeA,WAAA;AACA,cAAA,oBAAA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA;AAAA,aAAA,KAAA;AAAA,OAAA;AACA,KAHA;AAIA,iBAAA,uBAAA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA,MAAA;AACA;AANA;AAfA,CAAA","sourcesContent":["<template>\r\n    <div class=\"bg2\" style=\"height: 100px;\">\r\n        <p>child</p> \r\n        <p>来自父组件动态的prop值 :txt1=\"input1\":<span>{{txt1}}</span></p>\r\n        <p>来自父组件静态prop的传值 txt2=\"ddddd\" :<span>{{txt2}}</span></p>\r\n\r\n        <div>\r\n            <input type=\"text\" name=\"\" id=\"\" v-model=\"input1\"><button type=\"button\" @click=\"btnClick\">传值到父组件</button>\r\n        </div>\r\n        <div>\r\n            <input type=\"text\" v-model=\"input2\" @input=\"input2Input\">对一个  prop txt1 进行“双向绑定”\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'child',\r\n        props:['txt1','txt2'],\r\n        data() {\r\n            return {\r\n                text1:'',\r\n                text2:'',\r\n                input1:'',\r\n                input2:'',\r\n            }\r\n        },\r\n        created:function(){\r\n            this.text1=this.txt1;\r\n            this.text2=this.txt2;\r\n        },\r\n        methods:{\r\n            btnClick:function(){\r\n                this.$emit('getChildValue',{msg:this.input1});\r\n            },\r\n            input2Input:function(){\r\n                this.$emit('update:txt1',this.input2);\r\n            },\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>"],"sourceRoot":"src\\components\\parentChild"}]}