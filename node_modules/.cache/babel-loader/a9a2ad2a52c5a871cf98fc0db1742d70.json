{"remainingRequest":"K:\\VUE\\vueStudy\\node_modules\\thread-loader\\dist\\cjs.js!K:\\VUE\\vueStudy\\node_modules\\babel-loader\\lib\\index.js!K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!K:\\VUE\\vueStudy\\src\\views\\Form.vue?vue&type=script&lang=js","dependencies":[{"path":"K:\\VUE\\vueStudy\\src\\views\\Form.vue","mtime":1563952802000},{"path":"K:\\VUE\\vueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859504000},{"path":"K:\\VUE\\vueStudy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1531859516000},{"path":"K:\\VUE\\vueStudy\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport currencyInput from '@/components/Form/currencyInput'; //复选框\n\nvar arr = [];\n\nfor (var i = 0; i < 10; i++) {\n  arr.push({\n    text: 'check' + i,\n    value: i,\n    checked: false\n  });\n}\n\nvar arr2 = [];\n\nfor (var i = 0; i < 5; i++) {\n  arr2.push({\n    text: 'check' + i,\n    value: i,\n    checked: false\n  });\n} // console.log(arr);\n\n\nexport default {\n  name: 'Form',\n  components: {\n    'currency-input': currencyInput\n  },\n  data: function data() {\n    return {\n      price: null,\n      //currency-input 用到\n      //输入框\n      input1: '',\n      //动态加载复选框, 复选框的全选与反选\n      checkList: [],\n      //单选框的简单使用\n      radioList: [],\n      //下拉选\n      singleSelected: '',\n      manySelected: [],\n      options: [{\n        text: 'One',\n        value: 'A'\n      }, {\n        text: 'Two',\n        value: 'B'\n      }, {\n        text: 'Three',\n        value: 'C'\n      }]\n    };\n  },\n  computed: {\n    allChecked: function allChecked() {\n      var flag = true;\n\n      for (var _i = 0; _i < this.checkList.length; _i++) {\n        if (this.checkList[_i]['checked'] == false) {\n          flag = false;\n          break;\n        }\n      }\n\n      return flag;\n    },\n    checkedList: function checkedList() {\n      return this.checkList.filter(function (item) {\n        return item.checked == true;\n      });\n    },\n    radioChecked: function radioChecked() {\n      return this.radioList.filter(function (item) {\n        return item.checked == true;\n      })[0];\n    }\n  },\n  created: function created() {\n    var that = this;\n    arr.forEach(function (item) {\n      return that.checkList.push(item);\n    });\n    arr2.forEach(function (item) {\n      return that.radioList.push(item);\n    });\n  },\n  methods: {\n    checkBoxClick: function checkBoxClick(item, e) {\n      item.checked = !item.checked;\n    },\n    checkAllOrNone: function checkAllOrNone() {\n      if (this.allChecked) {\n        this.checkList.forEach(function (item) {\n          return item.checked = false;\n        });\n      } else {\n        this.checkList.forEach(function (item) {\n          return item.checked = true;\n        });\n      }\n    },\n    checkReverse: function checkReverse() {\n      this.checkList.forEach(function (item) {\n        return item.checked = !item.checked;\n      });\n    },\n    radioClick: function radioClick(radioList, item, e) {\n      radioList.map(function (a) {\n        if (item.value != a.value) {\n          a.checked = false;\n        }\n      });\n      item.checked = !item.checked;\n    },\n    radioNone: function radioNone() {\n      this.radioList.map(function (item) {\n        return item.checked = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["Form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"page\">\n        <fieldset class=\"fieldset\">\n            <legend> 输入框修饰符</legend>\n            <div class=\"fieldContent\">\n\n                <div>\n                    输入框的值:{{input1}}\n                </div>\n                <div>\n                    v-model.lazy=\"input1\"\n                    <input type=\"text\" name=\"\" v-model.lazy=\"input1\" id=\"\">\n\n                </div>\n            </div>\n        </fieldset>\n        <fieldset class=\"fieldset\">\n            <legend> 动态加载复选框, 复选框的全选与反选</legend>\n            <div class=\"fieldContent\">\n                <div style=\"height: 20px;\">\n                    选中的值:\n                    <span v-for=\"item in checkedList\">{{item.value}}</span>\n                </div>\n                <div>\n                    <template v-for=\"item in checkList\">\n                        <input type=\"checkbox\" name=\"test\" :value=\"item.value\" :key=\"item.value\" :checked=\"item.checked\" @click=\"checkBoxClick(item)\">{{item.text}}\n                    </template>\n                </div>\n                <div>\n                    <button type=\"button\" @click=\"checkAllOrNone\">全选/全不选</button>\n                    <button type=\"button\" @click=\"checkReverse\">反选</button>\n                </div>\n            </div>\n        </fieldset>\n        <fieldset class=\"fieldset\">\n            <legend> 单选框的简单使用</legend>\n            <div class=\"fieldContent\">\n                <div style=\"height: 20px;\">\n                    选中的值:\n                    <span>{{radioChecked==undefined?'':radioChecked.value}}</span>\n                </div>\n                <div>\n                    <template v-for=\"item in radioList\">\n                        <input @click=\"radioClick(radioList,item)\" type=\"radio\" name=\"type\" :value=\"item.value\" :checked=\"item.checked\" :id=\"'radioTest'+item.value\"\n                            :key=\"item.value\">\n                        <label :for=\"'radioTest'+item.value\">{{item.text}}</label>\n                    </template>\n                    <button @click=\"radioNone\">不选单选框</button>\n                </div>\n            </div>\n        </fieldset>\n        <fieldset class=\"fieldset\">\n            <legend> 选择框</legend>\n            <div class=\"fieldContent\">\n                <h4>单选框</h4>\n                <div style=\"height: 20px;\">\n                    选中的值:\n                    <span>{{singleSelected}}</span>\n                </div>\n                <div>\n                    <select name=\"singleSelected\" v-model=\"singleSelected\" id=\"\">\n                        <option disabled value=\"\">请选择</option>\n                        <option v-for=\"item in options\" :value=\"item.value\">{{item.text}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"fieldContent\">\n                <h4>多选框</h4>\n                <div style=\"height: 20px;\">\n                    选中的值:\n                    <span>{{manySelected}}</span>\n                </div>\n                <div>\n                    <select name=\"manySelected\" multiple v-model=\"manySelected\" id=\"\">\n                        <option disabled value=\"\">请选择</option>\n                        <option v-for=\"item in options\" :value=\"item.value\">{{item.text}}</option>\n                    </select>\n                </div>\n            </div>\n        </fieldset>\n        <fieldset class=\"fieldset\">\n            <legend> 自定义单选框:my-checkbox</legend>\n            <div class=\"fieldContent\">\n                <h4>单选框</h4>\n                <!-- v-model=\"foo\" value=\"some value\" -->\n                <!-- <my-checkbox ></my-checkbox> -->\n            </div>\n\n        </fieldset>\n        <fieldset class=\"fieldset\">\n            <legend> 货币输入的自定义控件:currency-input</legend>\n            <div class=\"fieldContent\">\n                <p>{{price}}</p>\n                <currency-input v-model=\"price\"></currency-input>\n            </div>\n\n        </fieldset>\n    </div>\n</template>\n\n<script>\n    import currencyInput from '@/components/Form/currencyInput'\n\n    //复选框\n    let arr = [];\n    for (var i = 0; i < 10; i++) {\n        arr.push({\n            text: 'check' + i,\n            value: i,\n            checked: false\n        });\n    }\n    let arr2 = [];\n    for (var i = 0; i < 5; i++) {\n        arr2.push({\n            text: 'check' + i,\n            value: i,\n            checked: false\n        });\n    }\n    // console.log(arr);\n    export default {\n        name: 'Form',\n        components:{\n            'currency-input':currencyInput\n        },\n        data() {\n            return {\n                price:null,//currency-input 用到\n                //输入框\n                input1: '',\n                //动态加载复选框, 复选框的全选与反选\n                checkList: [],\n                //单选框的简单使用\n                radioList: [],\n                //下拉选\n                singleSelected: '',\n                manySelected: [],\n                options: [{\n                    text: 'One',\n                    value: 'A'\n                },\n                {\n                    text: 'Two',\n                    value: 'B'\n                },\n                {\n                    text: 'Three',\n                    value: 'C'\n                }\n                ],\n            }\n        },\n        computed: {\n            allChecked: function () {\n                var flag = true;\n                for (let i = 0; i < this.checkList.length; i++) {\n                    if (this.checkList[i]['checked'] == false) {\n                        flag = false;\n                        break;\n                    }\n                }\n                return flag;\n            },\n            checkedList: function () {\n                return this.checkList.filter(item => item.checked == true);\n            },\n            radioChecked: function () {\n                return this.radioList.filter(item => item.checked == true)[0];\n            }\n        },\n        created: function () {\n            var that = this;\n            arr.forEach(item => that.checkList.push(item));\n            arr2.forEach(item => that.radioList.push(item));\n\n        },\n        methods: {\n            checkBoxClick: function (item, e) {\n                item.checked = !item.checked;\n            },\n            checkAllOrNone: function () {\n                if (this.allChecked) {\n                    this.checkList.forEach(item => item.checked = false);\n                } else {\n                    this.checkList.forEach(item => item.checked = true);\n                }\n            },\n            checkReverse: function () {\n                this.checkList.forEach(item => item.checked = !item.checked)\n            },\n            radioClick: function (radioList, item, e) {\n                radioList.map(function (a) {\n                    if (item.value != a.value) {\n                        a.checked = false\n                    }\n                });\n                item.checked = !item.checked;\n            },\n            radioNone: function () {\n                this.radioList.map(item => item.checked = false);\n            }\n        }\n    }\n\n</script>"],"sourceRoot":"src\\views"}]}