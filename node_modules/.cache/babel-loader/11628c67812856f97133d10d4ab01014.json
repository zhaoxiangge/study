{"remainingRequest":"K:\\VUE\\xz_admin_v2\\node_modules\\thread-loader\\dist\\cjs.js!K:\\VUE\\xz_admin_v2\\node_modules\\babel-loader\\lib\\index.js!K:\\VUE\\xz_admin_v2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!K:\\VUE\\xz_admin_v2\\src\\views\\Form.vue?vue&type=script&lang=js","dependencies":[{"path":"K:\\VUE\\xz_admin_v2\\src\\views\\Form.vue","mtime":1557382802731},{"path":"K:\\VUE\\xz_admin_v2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859503174},{"path":"K:\\VUE\\xz_admin_v2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1531859515376},{"path":"K:\\VUE\\xz_admin_v2\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"K:\\VUE\\xz_admin_v2\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//复选框\nvar arr = [];\n\nfor (var i = 0; i < 10; i++) {\n  arr.push({\n    text: 'check' + i,\n    value: i,\n    checked: false\n  });\n}\n\nvar arr2 = [];\n\nfor (var i = 0; i < 5; i++) {\n  arr2.push({\n    text: 'check' + i,\n    value: i,\n    checked: false\n  });\n} // console.log(arr);\n\n\nexport default {\n  name: 'Form',\n  data: function data() {\n    return {\n      //输入框\n      input1: '',\n      //动态加载复选框, 复选框的全选与反选\n      checkList: [],\n      //单选框的简单使用\n      radioList: [],\n      //下拉选\n      singleSelected: '',\n      manySelected: [],\n      options: [{\n        text: 'One',\n        value: 'A'\n      }, {\n        text: 'Two',\n        value: 'B'\n      }, {\n        text: 'Three',\n        value: 'C'\n      }]\n    };\n  },\n  computed: {\n    allChecked: function allChecked() {\n      var flag = true;\n\n      for (var _i = 0; _i < this.checkList.length; _i++) {\n        if (this.checkList[_i]['checked'] == false) {\n          flag = false;\n          break;\n        }\n      }\n\n      return flag;\n    },\n    checkedList: function checkedList() {\n      return this.checkList.filter(function (item) {\n        return item.checked == true;\n      });\n    },\n    radioChecked: function radioChecked() {\n      return this.radioList.filter(function (item) {\n        return item.checked == true;\n      })[0];\n    }\n  },\n  created: function created() {\n    var that = this;\n    arr.forEach(function (item) {\n      return that.checkList.push(item);\n    });\n    arr2.forEach(function (item) {\n      return that.radioList.push(item);\n    });\n  },\n  methods: {\n    checkBoxClick: function checkBoxClick(item, e) {\n      item.checked = !item.checked;\n    },\n    checkAllOrNone: function checkAllOrNone() {\n      if (this.allChecked) {\n        this.checkList.forEach(function (item) {\n          return item.checked = false;\n        });\n      } else {\n        this.checkList.forEach(function (item) {\n          return item.checked = true;\n        });\n      }\n    },\n    checkReverse: function checkReverse() {\n      this.checkList.forEach(function (item) {\n        return item.checked = !item.checked;\n      });\n    },\n    radioClick: function radioClick(radioList, item, e) {\n      radioList.map(function (a) {\n        if (item.value != a.value) {\n          a.checked = false;\n        }\n      });\n      item.checked = !item.checked;\n    },\n    radioNone: function radioNone() {\n      this.radioList.map(function (item) {\n        return item.checked = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["Form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"page\">\r\n        <fieldset class=\"fieldset\">\r\n            <legend> 输入框修饰符</legend>\r\n            <div class=\"fieldContent\">\r\n\r\n                <div>\r\n                    输入框的值:{{input1}}\r\n                </div>\r\n                <div>\r\n                    v-model.lazy=\"input1\"\r\n                    <input type=\"text\" name=\"\" v-model.lazy=\"input1\" id=\"\">\r\n\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class=\"fieldset\">\r\n            <legend> 动态加载复选框, 复选框的全选与反选</legend>\r\n            <div class=\"fieldContent\">\r\n                <div style=\"height: 20px;\">\r\n                    选中的值:\r\n                    <span v-for=\"item in checkedList\">{{item.value}}</span>\r\n                </div>\r\n                <div>\r\n                    <template v-for=\"item in checkList\">\r\n                        <input type=\"checkbox\" name=\"test\" :value=\"item.value\" :key=\"item.value\" :checked=\"item.checked\" @click=\"checkBoxClick(item)\">{{item.text}}\r\n                    </template>\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" @click=\"checkAllOrNone\">全选/全不选</button>\r\n                    <button type=\"button\" @click=\"checkReverse\">反选</button>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class=\"fieldset\">\r\n            <legend> 单选框的简单使用</legend>\r\n            <div class=\"fieldContent\">\r\n                <div style=\"height: 20px;\">\r\n                    选中的值:\r\n                    <span>{{radioChecked==undefined?'':radioChecked.value}}</span>\r\n                </div>\r\n                <div>\r\n                    <template v-for=\"item in radioList\">\r\n                        <input @click=\"radioClick(radioList,item)\" type=\"radio\" name=\"type\" :value=\"item.value\" :checked=\"item.checked\" :id=\"'radioTest'+item.value\"\r\n                            :key=\"item.value\">\r\n                        <label :for=\"'radioTest'+item.value\">{{item.text}}</label>\r\n                    </template>\r\n                    <button @click=\"radioNone\">不选单选框</button>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset class=\"fieldset\">\r\n            <legend> 选择框</legend>\r\n            <div class=\"fieldContent\">\r\n                <h4>单选框</h4>\r\n                <div style=\"height: 20px;\">\r\n                    选中的值:\r\n                    <span>{{singleSelected}}</span>\r\n                </div>\r\n                <div>\r\n                    <select name=\"singleSelected\" v-model=\"singleSelected\" id=\"\">\r\n                        <option disabled value=\"\">请选择</option>\r\n                        <option v-for=\"item in options\" :value=\"item.value\">{{item.text}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"fieldContent\">\r\n                <h4>多选框</h4>\r\n                <div style=\"height: 20px;\">\r\n                    选中的值:\r\n                    <span>{{manySelected}}</span>\r\n                </div>\r\n                <div>\r\n                    <select name=\"manySelected\" multiple v-model=\"manySelected\" id=\"\">\r\n                        <option disabled value=\"\">请选择</option>\r\n                        <option v-for=\"item in options\" :value=\"item.value\">{{item.text}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    //复选框\r\n    let arr = [];\r\n    for (var i = 0; i < 10; i++) {\r\n        arr.push({\r\n            text: 'check' + i,\r\n            value: i,\r\n            checked: false\r\n        });\r\n    }\r\n    let arr2 = [];\r\n    for (var i = 0; i < 5; i++) {\r\n        arr2.push({\r\n            text: 'check' + i,\r\n            value: i,\r\n            checked: false\r\n        });\r\n    }\r\n    // console.log(arr);\r\n    export default {\r\n        name: 'Form',\r\n        data() {\r\n            return {\r\n                //输入框\r\n                input1: '',\r\n                //动态加载复选框, 复选框的全选与反选\r\n                checkList: [],\r\n                //单选框的简单使用\r\n                radioList: [],\r\n                //下拉选\r\n                singleSelected: '',\r\n                manySelected: [],\r\n                options: [{\r\n                        text: 'One',\r\n                        value: 'A'\r\n                    },\r\n                    {\r\n                        text: 'Two',\r\n                        value: 'B'\r\n                    },\r\n                    {\r\n                        text: 'Three',\r\n                        value: 'C'\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n        computed: {\r\n            allChecked: function () {\r\n                var flag = true;\r\n                for (let i = 0; i < this.checkList.length; i++) {\r\n                    if (this.checkList[i]['checked'] == false) {\r\n                        flag = false;\r\n                        break;\r\n                    }\r\n                }\r\n                return flag;\r\n            },\r\n            checkedList: function () {\r\n                return this.checkList.filter(item => item.checked == true);\r\n            },\r\n            radioChecked: function () {\r\n                return this.radioList.filter(item => item.checked == true)[0];\r\n            }\r\n        },\r\n        created: function () {\r\n            var that = this;\r\n            arr.forEach(item => that.checkList.push(item));\r\n            arr2.forEach(item => that.radioList.push(item));\r\n\r\n        },\r\n        methods: {\r\n            checkBoxClick: function (item, e) {\r\n                item.checked = !item.checked;\r\n            },\r\n            checkAllOrNone: function () {\r\n                if (this.allChecked) {\r\n                    this.checkList.forEach(item => item.checked = false);\r\n                } else {\r\n                    this.checkList.forEach(item => item.checked = true);\r\n                }\r\n            },\r\n            checkReverse: function () {\r\n                this.checkList.forEach(item => item.checked = !item.checked)\r\n            },\r\n            radioClick: function (radioList, item, e) {\r\n                radioList.map(function (a) {\r\n                    if (item.value != a.value) {\r\n                        a.checked = false\r\n                    }\r\n                });\r\n                item.checked = !item.checked;\r\n            },\r\n            radioNone: function () {\r\n                this.radioList.map(item => item.checked = false);\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src\\views"}]}