{"remainingRequest":"K:\\VUE\\vueStudy\\node_modules\\babel-loader\\lib\\index.js!K:\\VUE\\vueStudy\\src\\vueComponent.js","dependencies":[{"path":"K:\\VUE\\vueStudy\\src\\vueComponent.js","mtime":1563940364000},{"path":"K:\\VUE\\vueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859504000},{"path":"K:\\VUE\\vueStudy\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nvar MyPlugin = {};\n\nMyPlugin.install = function (Vue, options) {\n  return;\n  Vue.component('currency-input', {\n    template: '\\\r\n          <span>\\\r\n            $\\\r\n            <input\\\r\n              ref=\"input\"\\\r\n              v-bind:value=\"value\"\\\r\n              v-on:input=\"updateValue($event.target.value)\"\\\r\n            >\\\r\n          </span>\\\r\n        ',\n    props: ['value'],\n    methods: {\n      // 不是直接更新值，而是使用此方法来对输入值进行格式化和位数限制\n      updateValue: function updateValue(value) {\n        var formattedValue = value // 删除两侧的空格符\n        .trim() // 保留 2 位小数\n        .slice(0, value.indexOf('.') === -1 ? value.length : value.indexOf('.') + 3); // 如果值尚不合规，则手动覆盖为合规的值\n\n        if (formattedValue !== value) {\n          this.$refs.input.value = formattedValue;\n        } // 通过 input 事件带出数值\n\n\n        this.$emit('input', Number(formattedValue));\n      }\n    }\n  });\n  Vue.component('my-checkbox', {\n    model: {\n      prop: 'checked',\n      event: 'change'\n    },\n    props: {\n      checked: Boolean,\n      // 这样就允许拿 `value` 这个 prop 做其它事了\n      value: String\n    },\n    // ...\n    template: '\\\r\n            <span>\\\r\n            $\\\r\n            <input\\\r\n                ref=\"input\"\\\r\n                v-bind:value=\"value\"\\\r\n                v-on:input=\"updateValue($event.target.value)\"\\\r\n            >\\\r\n            </span>\\\r\n        '\n  });\n};\n\nexport default MyPlugin;",{"version":3,"sources":["src\\vueComponent.js"],"names":["MyPlugin","install","Vue","options","component","template","props","methods","updateValue","value","formattedValue","trim","slice","indexOf","length","$refs","input","$emit","Number","model","prop","event","checked","Boolean","String"],"mappings":";AAAA,IAAMA,WAAW,EAAjB;;AACAA,SAASC,OAAT,GAAmB,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACvC;AACAD,MAAIE,SAAJ,CAAc,gBAAd,EAAgC;AAC5BC,cAAU;;;;;;;;;SADkB;AAW5BC,WAAO,CAAC,OAAD,CAXqB;AAY5BC,aAAS;AACL;AACAC,mBAAa,qBAAUC,KAAV,EAAiB;AAC1B,YAAIC,iBAAiBD,MACjB;AADiB,SAEhBE,IAFgB,GAGjB;AAHiB,SAIhBC,KAJgB,CAKb,CALa,EAMbH,MAAMI,OAAN,CAAc,GAAd,MAAuB,CAAC,CAAxB,GACAJ,MAAMK,MADN,GAEAL,MAAMI,OAAN,CAAc,GAAd,IAAqB,CARR,CAArB,CAD0B,CAW1B;;AACA,YAAIH,mBAAmBD,KAAvB,EAA8B;AAC1B,eAAKM,KAAL,CAAWC,KAAX,CAAiBP,KAAjB,GAAyBC,cAAzB;AACH,SAdyB,CAe1B;;;AACA,aAAKO,KAAL,CAAW,OAAX,EAAoBC,OAAOR,cAAP,CAApB;AACH;AAnBI;AAZmB,GAAhC;AAkCAR,MAAIE,SAAJ,CAAc,aAAd,EAA6B;AACzBe,WAAO;AACHC,YAAM,SADH;AAEHC,aAAO;AAFJ,KADkB;AAKzBf,WAAO;AACHgB,eAASC,OADN;AAEH;AACAd,aAAOe;AAHJ,KALkB;AAUzB;AACAnB,cAAU;;;;;;;;;;AAXe,GAA7B;AAsBH,CA1DD;;AA2DA,eAAeL,QAAf","sourceRoot":"K:\\VUE\\vueStudy","sourcesContent":["const MyPlugin = {};\r\nMyPlugin.install = function (Vue, options) {\r\n    return;\r\n    Vue.component('currency-input', {\r\n        template: '\\\r\n          <span>\\\r\n            $\\\r\n            <input\\\r\n              ref=\"input\"\\\r\n              v-bind:value=\"value\"\\\r\n              v-on:input=\"updateValue($event.target.value)\"\\\r\n            >\\\r\n          </span>\\\r\n        ',\r\n        props: ['value'],\r\n        methods: {\r\n            // 不是直接更新值，而是使用此方法来对输入值进行格式化和位数限制\r\n            updateValue: function (value) {\r\n                var formattedValue = value\r\n                    // 删除两侧的空格符\r\n                    .trim()\r\n                    // 保留 2 位小数\r\n                    .slice(\r\n                        0,\r\n                        value.indexOf('.') === -1 ?\r\n                        value.length :\r\n                        value.indexOf('.') + 3\r\n                    )\r\n                // 如果值尚不合规，则手动覆盖为合规的值\r\n                if (formattedValue !== value) {\r\n                    this.$refs.input.value = formattedValue\r\n                }\r\n                // 通过 input 事件带出数值\r\n                this.$emit('input', Number(formattedValue))\r\n            }\r\n        }\r\n    })\r\n    Vue.component('my-checkbox', {\r\n        model: {\r\n            prop: 'checked',\r\n            event: 'change'\r\n        },\r\n        props: {\r\n            checked: Boolean,\r\n            // 这样就允许拿 `value` 这个 prop 做其它事了\r\n            value: String\r\n        },\r\n        // ...\r\n        template: '\\\r\n            <span>\\\r\n            $\\\r\n            <input\\\r\n                ref=\"input\"\\\r\n                v-bind:value=\"value\"\\\r\n                v-on:input=\"updateValue($event.target.value)\"\\\r\n            >\\\r\n            </span>\\\r\n        ',\r\n    })\r\n}\r\nexport default MyPlugin"]}]}