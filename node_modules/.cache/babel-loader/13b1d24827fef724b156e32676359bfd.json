{"remainingRequest":"K:\\VUE\\vueStudy\\node_modules\\babel-loader\\lib\\index.js!K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!K:\\VUE\\vueStudy\\src\\views\\Transitions.vue?vue&type=script&lang=js","dependencies":[{"path":"K:\\VUE\\vueStudy\\src\\views\\Transitions.vue","mtime":1561991118000},{"path":"K:\\VUE\\vueStudy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859504000},{"path":"K:\\VUE\\vueStudy\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"K:\\VUE\\vueStudy\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport mySpecialTransition from \"@/components/mySpecialTransition.vue\";\nimport parent from \"@/components/parentChild/parent.vue\";\nimport customInput from \"@/components/customInput.vue\";\nimport slotParent from \"@/components/slot/parent.vue\";\nexport default {\n  name: \"Transitions\",\n  components: {\n    'mySpecialTransition': mySpecialTransition,\n    'parent': parent,\n    'customInput': customInput,\n    'slotParent': slotParent\n  },\n  data: function data() {\n    return {\n      show: true,\n      show2: true,\n      show3: true,\n      show4: true,\n      items: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      items2: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      nextNum: 10,\n      currentView: 'parent',\n      componentArr: [{\n        text: 'parent',\n        value: 'parent'\n      }, {\n        text: 'customInput',\n        value: 'customInput'\n      }, {\n        text: 'slotParent',\n        value: 'slotParent'\n      }]\n    };\n  },\n  created: function created() {},\n  methods: {\n    randomIndex: function randomIndex() {\n      return Math.floor(Math.random() * this.items.length);\n    },\n    add: function add() {\n      this.items.splice(this.randomIndex(), 0, this.nextNum++);\n    },\n    remove: function remove() {\n      this.items.splice(this.randomIndex(), 1);\n    },\n    // --------\n    // 进入中\n    // --------\n    beforeEnter: function beforeEnter(el) {\n      // ...\n      console.log('beforeEnter');\n    },\n    // 此回调函数是可选项的设置\n    // 与 CSS 结合时使用\n    enter: function enter(el, done) {\n      // ...\n      done();\n    },\n    afterEnter: function afterEnter(el) {// ...\n    },\n    enterCancelled: function enterCancelled(el) {// ...\n    },\n    // --------\n    // 离开时\n    // --------\n    beforeLeave: function beforeLeave(el) {// ...\n    },\n    // 此回调函数是可选项的设置\n    // 与 CSS 结合时使用\n    leave: function leave(el, done) {\n      console.log('leave'); // ...\n\n      done();\n    },\n    afterLeave: function afterLeave(el) {// ...\n    },\n    // leaveCancelled 只用于 v-show 中\n    leaveCancelled: function leaveCancelled(el) {// ...\n    }\n  }\n};",{"version":3,"sources":["Transitions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA,OAAA,mBAAA,MAAA,sCAAA;AACA,OAAA,MAAA,MAAA,qCAAA;AACA,OAAA,WAAA,MAAA,8BAAA;AACA,OAAA,UAAA,MAAA,8BAAA;AACA,eAAA;AACA,QAAA,aADA;AAEA,cAAA;AACA,2BAAA,mBADA;AAEA,cAAA,MAFA;AAGA,mBAAA,WAHA;AAIA,kBAAA;AAJA,GAFA;AAQA,MARA,kBAQA;AACA,WAAA;AACA,YAAA,IADA;AAEA,aAAA,IAFA;AAGA,aAAA,IAHA;AAIA,aAAA,IAJA;AAKA,aAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CALA;AAMA,cAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CANA;AAOA,eAAA,EAPA;AAQA,mBAAA,QARA;AASA,oBAAA,CAAA;AACA,cAAA,QADA;AAEA,eAAA;AAFA,OAAA,EAIA;AACA,cAAA,aADA;AAEA,eAAA;AAFA,OAJA,EAQA;AACA,cAAA,YADA;AAEA,eAAA;AAFA,OARA;AATA,KAAA;AAuBA,GAhCA;AAiCA,WAAA,mBAAA,CACA,CAlCA;AAmCA,WAAA;AACA,iBAAA,uBAAA;AACA,aAAA,KAAA,KAAA,CAAA,KAAA,MAAA,KAAA,KAAA,KAAA,CAAA,MAAA,CAAA;AACA,KAHA;AAIA,SAAA,eAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,WAAA,EAAA,EAAA,CAAA,EAAA,KAAA,OAAA,EAAA;AACA,KANA;AAOA,YAAA,kBAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,WAAA,EAAA,EAAA,CAAA;AACA,KATA;AAUA;AACA;AACA;AAEA,iBAAA,qBAAA,EAAA,EAAA;AACA;AACA,cAAA,GAAA,CAAA,aAAA;AACA,KAjBA;AAkBA;AACA;AACA,WAAA,eAAA,EAAA,EAAA,IAAA,EAAA;AACA;AACA;AACA,KAvBA;AAwBA,gBAAA,oBAAA,EAAA,EAAA,CACA;AACA,KA1BA;AA2BA,oBAAA,wBAAA,EAAA,EAAA,CACA;AACA,KA7BA;AA+BA;AACA;AACA;AAEA,iBAAA,qBAAA,EAAA,EAAA,CACA;AACA,KArCA;AAsCA;AACA;AACA,WAAA,eAAA,EAAA,EAAA,IAAA,EAAA;AACA,cAAA,GAAA,CAAA,OAAA,EADA,CAEA;;AACA;AACA,KA5CA;AA6CA,gBAAA,oBAAA,EAAA,EAAA,CACA;AACA,KA/CA;AAgDA;AACA,oBAAA,wBAAA,EAAA,EAAA,CACA;AACA;AAnDA;AAnCA,CAAA","sourcesContent":["<template>\n    <div class=\"page fade-enter-active fade-leave-active\">\n        <fieldset class=\"fieldset\">\n            <legend>demo</legend>\n            <div class=\"fieldContent\">\n\n            </div>\n        </fieldset>\n        <fieldset class=\"fieldset\">\n            <legend>透明度动画</legend>\n            <div class=\"fieldContent\">\n                <button v-on:click=\"show = !show\">\n                    Toggle show\n                </button>\n                <transition mode=\"out-in\" v-on:before-enter=\"beforeEnter\" v-on:enter=\"enter\" v-on:after-enter=\"afterEnter\" v-on:enter-cancelled=\"enterCancelled\"\n                    v-on:before-leave=\"beforeLeave\" v-on:leave=\"leave\" v-on:after-leave=\"afterLeave\" v-on:leave-cancelled=\"leaveCancelled\"\n                    name=\"fade\" :duration=\"{ enter: 5000, leave: 8000 }\">\n                    <p id=\"hello\" v-if=\"show\">hello</p>\n                </transition>\n            </div>\n        </fieldset>\n        <fieldset class=\"fieldset\">\n            <legend> v-if 移除元素和创建元素动画过渡效果不同</legend>\n            <div class=\"fieldContent\">\n                <button @click=\"show2 = !show2\">\n                    Toggle render show2\n                </button>\n                <transition name=\"slide-fade\">\n                    <p v-if=\"show2\">hello</p>\n                </transition>\n            </div>\n        </fieldset>\n        <fieldset class=\"fieldset\">\n            <legend>CSS 动画</legend>\n            <div class=\"fieldContent\">\n                <button @click=\"show3 = !show3\">Toggle render show3</button>\n                <transition name=\"bounce\">\n                    <p v-if=\"show3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris facilisis enim libero, at lacinia diam\n                        fermentum id. Pellentesque habitant morbi tristique senectus et netus.</p>\n                </transition>\n            </div>\n        </fieldset>\n        <fieldset class=\"fieldset\">\n            <legend>自定义过渡的类名</legend>\n            <div class=\"fieldContent\">\n                <button @click=\"show4 = !show4\">\n                    Toggle render show4\n                </button>\n                <transition name=\"custom-classes-transition\" enter-active-class=\"animated tada\" leave-active-class=\"animated bounceOutRight\">\n                    <p v-if=\"show4\">hello</p>\n                </transition>\n            </div>\n        </fieldset>\n        <fieldset class=\"fieldset\">\n            <legend>列表过渡</legend>\n            <div class=\"fieldContent\">\n                <fieldset class=\"fieldset\">\n                    <legend>列表的进入/离开过渡</legend>\n                    <div class=\"fieldContent\">\n                        <button v-on:click=\"add\">Add</button>\n                        <button v-on:click=\"remove\">Remove</button>\n                        <transition-group name=\"list\" tag=\"p\">\n                            <span v-for=\"item in items\" v-bind:key=\"item\" class=\"list-item\">\n                                {{ item }}\n                            </span>\n                        </transition-group>\n                    </div>\n                </fieldset>\n                <fieldset class=\"fieldset\">\n                    <legend>列表的排序过渡 需要引入别的插件资源</legend>\n                    <div class=\"fieldContent\">\n                        <!-- <button v-on:click=\"shuffle\">Shuffle</button>\n                            <transition-group name=\"flip-list\" tag=\"ul\">\n                              <li v-for=\"item in items2\" v-bind:key=\"item\">\n                                {{ item }}\n                              </li>\n                            </transition-group> -->\n                    </div>\n                </fieldset>\n                <fieldset class=\"fieldset\">\n                    <legend>可复用的过渡</legend>\n                    <div class=\"fieldContent\">\n                        <div class=\"mb10\">\n                            <select name=\"singleSelected\" v-model=\"currentView\" id=\"\">\n                                <option disabled value=\"\">请选择</option>\n                                <option v-for=\"item in componentArr\" :value=\"item.value\">{{item.text}}</option>\n                            </select>\n                        </div>\n\n\n                        <mySpecialTransition>\n                            <component v-bind:is=\"currentView\">\n                                <!-- 组件在 vm.currentview 变化时改变！ -->\n                            </component>\n                        </mySpecialTransition>\n                    </div>\n                </fieldset>\n            </div>\n        </fieldset>\n    </div>\n</template>\n\n<script>\n    import mySpecialTransition from \"@/components/mySpecialTransition.vue\";\n    import parent from \"@/components/parentChild/parent.vue\"\n    import customInput from \"@/components/customInput.vue\"\n    import slotParent from \"@/components/slot/parent.vue\"\n    export default {\n        name: \"Transitions\",\n        components: {\n            'mySpecialTransition': mySpecialTransition,\n            'parent': parent,\n            'customInput': customInput,\n            'slotParent': slotParent,            \n        },\n        data() {\n            return {\n                show: true,\n                show2: true,\n                show3: true,\n                show4: true,\n                items: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                items2: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                nextNum: 10,\n                currentView:'parent',\n                componentArr: [{\n                        text: 'parent',\n                        value: 'parent'\n                    },\n                    {\n                        text: 'customInput',\n                        value: 'customInput'\n                    },\n                    {\n                        text: 'slotParent',\n                        value: 'slotParent'\n                    }\n                ],\n            }\n        },\n        created: function () {\n        },\n        methods: {\n            randomIndex: function () {\n                return Math.floor(Math.random() * this.items.length)\n            },\n            add: function () {\n                this.items.splice(this.randomIndex(), 0, this.nextNum++)\n            },\n            remove: function () {\n                this.items.splice(this.randomIndex(), 1)\n            },\n            // --------\n            // 进入中\n            // --------\n\n            beforeEnter: function (el) {\n                // ...\n                console.log('beforeEnter');\n            },\n            // 此回调函数是可选项的设置\n            // 与 CSS 结合时使用\n            enter: function (el, done) {\n                // ...\n                done()\n            },\n            afterEnter: function (el) {\n                // ...\n            },\n            enterCancelled: function (el) {\n                // ...\n            },\n\n            // --------\n            // 离开时\n            // --------\n\n            beforeLeave: function (el) {\n                // ...\n            },\n            // 此回调函数是可选项的设置\n            // 与 CSS 结合时使用\n            leave: function (el, done) {\n                console.log('leave');\n                // ...\n                done()\n            },\n            afterLeave: function (el) {\n                // ...\n            },\n            // leaveCancelled 只用于 v-show 中\n            leaveCancelled: function (el) {\n                // ...\n            }\n        },\n    }\n</script>\n<style>\n    .list-item {\n        display: inline-block;\n        margin-right: 10px;\n    }\n\n    .list-enter-active,\n    .list-leave-active {\n        transition: all 1s;\n    }\n\n    .list-enter,\n    .list-leave-to\n    /* .list-leave-active for below version 2.1.8 */\n\n        {\n        opacity: 0;\n        transform: translateY(30px);\n    }\n\n    .fade-enter-active,\n    .fade-leave-active {\n        transition: all 2s;\n    }\n\n    .fade-enter,\n    .fade-leave-to {\n        opacity: 0;\n    }\n\n\n    /* 可以设置不同的进入和离开动画 */\n\n    /* 设置持续时间和动画函数 */\n\n    .slide-fade-enter-active {\n        transition: all .3s ease;\n    }\n\n    .slide-fade-leave-active {\n        transition: all .8s cubic-bezier(1.0, 0.5, 0.8, 1.0);\n    }\n\n    .slide-fade-enter,\n    .slide-fade-leave-to\n    /* .slide-fade-leave-active for below version 2.1.8 */\n\n        {\n        transform: translateX(10px);\n        opacity: 0;\n    }\n\n    /* 动画 */\n\n    .bounce-enter-active {\n        animation: bounce-in .5s;\n    }\n\n    .bounce-leave-active {\n        animation: bounce-in 1.5s reverse;\n    }\n\n    @keyframes bounce-in {\n        0% {\n            transform: scale(0);\n        }\n        50% {\n            transform: scale(1.5);\n        }\n        100% {\n            transform: scale(1);\n        }\n    }\n</style>"],"sourceRoot":"src\\views"}]}